==8823== Memcheck, a memory error detector
==8823== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8823== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==8823== Command: ./arcade ./lib/lib_arcade_ncurses.so
==8823== 
==8823== Invalid read of size 1
==8823==    at 0x60F2D8D: LNcurses::drawScene(Scene&) (in /home/extra/Projet/Mini-projet/Epitech/arcade/lib/lib_arcade_ncurses.so)
==8823==    by 0x10B73B: main (in /home/extra/Projet/Mini-projet/Epitech/arcade/arcade)
==8823==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8823== 
==8823== 
==8823== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==8823==  Access not within mapped region at address 0x0
==8823==    at 0x60F2D8D: LNcurses::drawScene(Scene&) (in /home/extra/Projet/Mini-projet/Epitech/arcade/lib/lib_arcade_ncurses.so)
==8823==    by 0x10B73B: main (in /home/extra/Projet/Mini-projet/Epitech/arcade/arcade)
==8823==  If you believe this happened as a result of a stack
==8823==  overflow in your program's main thread (unlikely but
==8823==  possible), you can try to increase the size of the
==8823==  main thread stack using the --main-stacksize= flag.
==8823==  The main thread stack size used in this run was 8388608.
==8823== 
==8823== HEAP SUMMARY:
==8823==     in use at exit: 761,546 bytes in 528 blocks
==8823==   total heap usage: 557 allocs, 29 frees, 848,644 bytes allocated
==8823== 
==8823== LEAK SUMMARY:
==8823==    definitely lost: 0 bytes in 0 blocks
==8823==    indirectly lost: 0 bytes in 0 blocks
==8823==      possibly lost: 0 bytes in 0 blocks
==8823==    still reachable: 761,546 bytes in 528 blocks
==8823==         suppressed: 0 bytes in 0 blocks
==8823== Rerun with --leak-check=full to see details of leaked memory
==8823== 
==8823== For counts of detected and suppressed errors, rerun with: -v
==8823== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
